import com.saucelabs.gradle.SauceListener

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://repository-saucelabs.forge.cloudbees.com/release"
        }
    }
    dependencies {
        classpath group: 'com.saucelabs.gradle', name: 'sauce-gradle-plugin', version: '0.0.1'
        classpath 'org.gebish:geb-gradle:0.10.0'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'war'
apply from: 'gretty.plugin'
apply plugin: 'idea'
apply plugin: 'project-report'
apply plugin: 'geb-saucelabs' // We want to use Sauce Connect

group = 'me.pdouble'
version = '0.1-SNAPSHOT'

description = """Demonstration of functional tests using Sauce Labs on a simple Java stack using Gradle to build."""

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    jcenter()
    maven {
        url "https://repository-saucelabs.forge.cloudbees.com/release"
    }
}

sourceSets {
    functionalTest
}

idea {
    module {
        scopes.TEST.plus += [ configurations.functionalTestCompile ]
    }
}

gradle.addListener(new SauceListener(System.getenv("SAUCE_LABS_USER"), System.getenv("SAUCE_LABS_ACCESS_PASSWORD")))

dependencies {
    compile(group: 'org.springframework', name: 'spring-context', version:'4.0.3.RELEASE') {
        exclude(module: 'commons-logging')
    }
    compile group: 'org.springframework', name: 'spring-webmvc', version:'4.0.3.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-config', version:'3.2.3.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-web', version:'3.2.3.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-taglibs', version:'3.2.3.RELEASE'
    compile group: 'org.thymeleaf', name: 'thymeleaf', version:'2.1.2.RELEASE'
    compile group: 'org.thymeleaf', name: 'thymeleaf-spring4', version:'2.1.2.RELEASE'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity3', version:'2.1.1.RELEASE'
    compile group: 'org.springframework', name: 'spring-jdbc', version:'4.0.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-tx', version:'4.0.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-orm', version:'4.0.3.RELEASE'
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version:'4.2.5.Final'
    compile group: 'org.hsqldb', name: 'hsqldb', version:'2.3.0'
    compile group: 'org.springframework.data', name: 'spring-data-jpa', version:'1.4.1.RELEASE'
    compile group: 'org.springframework.data', name: 'spring-data-mongodb', version:'1.3.1.RELEASE'
    compile group: 'javax.validation', name: 'validation-api', version:'1.0.0.GA'
    compile group: 'org.hibernate', name: 'hibernate-validator', version:'4.3.0.Final'
    compile group: 'org.aspectj', name: 'aspectjrt', version:'1.7.4'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.5'
    compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.0.13'
    compile group: 'javax.inject', name: 'javax.inject', version:'1'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version:'1.9.9'
    compile group: 'com.google.guava', name: 'guava', version:'14.0.1'
    runtime group: 'org.slf4j', name: 'jcl-over-slf4j', version:'1.7.5'

    testCompile group: 'junit', name: 'junit', version:'4.11'
    testCompile group: 'org.mockito', name: 'mockito-core', version:'1.9.5'
    testCompile group: 'org.assertj', name: 'assertj-core', version:'1.5.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version:'1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version:'1.3'
    testCompile group: 'org.objenesis', name: 'objenesis', version:'1.3'
    testCompile group: 'org.springframework', name: 'spring-test', version:'4.0.3.RELEASE'

    sauceConnect "com.saucelabs:ci-sauce:1.81"

    functionalTestCompile group: 'junit', name: 'junit', version:'4.11'
    functionalTestCompile 'org.seleniumhq.selenium:selenium-java:2.42.2'
    functionalTestCompile 'com.github.detro.ghostdriver:phantomjsdriver:1.1.0'
    functionalTestCompile group: 'com.saucelabs', name: 'sauce_java_common', version: '2.1.10'

    providedCompile group: 'org.apache.geronimo.specs', name: 'geronimo-servlet_3.0_spec', version:'1.0'
}

sauceLabs {
    account {
        username = System.getenv("SAUCE_LABS_USER")
        accessKey = System.getenv("SAUCE_LABS_ACCESS_PASSWORD")
    }
    connect {
        port = 4445
    }
}

def browsers = [
    [ browserName: 'chrome',            platform: 'Windows 7',   version:  '36' ],
    [ browserName: 'firefox',           platform: 'Windows 7',   version:  '31' ],
    [ browserName: 'firefox',           platform: 'mac',  version:  '33' ],
    [ browserName: 'internet explorer', platform: 'Windows 7',   version:   '8' ],
    [ browserName: 'internet explorer', platform: 'Windows 7',   version:   '9' ],
    [ browserName: 'internet explorer', platform: 'Windows 7',   version:  '10' ],
    [ browserName: 'internet explorer', platform: '', version:  '11' ],
    [ browserName: 'iPhone',            platform: 'mac',   version: '7.1', 'device-orientation': 'portrait']
]

def functionalTestTasks = []

task phantomJsTest(type: Test) {
    testClassesDir = sourceSets.functionalTest.output.classesDir
    classpath = sourceSets.functionalTest.runtimeClasspath
    systemProperty 'testReportDir', testReportDir
}
phantomJsTest.dependsOn 'appBeforeIntegrationTest', 'openSauceTunnelInBackground'
phantomJsTest.finalizedBy 'appAfterIntegrationTest', 'closeSauceTunnel'
functionalTestTasks << phantomJsTest

browsers.each { browserSpec ->
    def name = browserSpec.collect { key, value -> value }.join('_').replaceAll(/\s+/, '')

    task "${name}Test"(type: Test) {
        outputs.upToDateWhen { false }
        testClassesDir = sourceSets.functionalTest.output.classesDir
        classpath = sourceSets.functionalTest.runtimeClasspath
        dependsOn 'appBeforeIntegrationTest', 'openSauceTunnelInBackground'
        finalizedBy 'appAfterIntegrationTest', 'closeSauceTunnel'
        systemProperty 'testReportDir', testReportDir
        systemProperty 'saucelabs.job-name', project.name
        systemProperty 'saucelabs.build', project.version
        systemProperty 'saucelabs.browser', browserSpec.collect { key, value -> "${key}=${value}" }.join(',')
    }
    functionalTestTasks << "${name}Test"
}

task functionalTest(dependsOn: functionalTestTasks, type: Test) {

}
